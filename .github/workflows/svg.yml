name: Generate LOC Graph and Badge

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  generate_loc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Python libraries
        run: |
          pip install requests matplotlib

      - name: Get LOC data
        id: get_loc
        run: |
          import requests
          import json

          url = "https://api.codetabs.com/v1/loc/?github=CodeNoSekai/wa-bulk-sender-template"
          response = requests.get(url)
          response.raise_for_status()
          data = response.json()

          with open("loc_data.json", "w") as f:
            json.dump(data, f)

      - name: Generate LOC graph
        run: |
          import json
          import matplotlib.pyplot as plt

          with open("loc_data.json", "r") as f:
            data = json.load(f)

          languages =
          loc =
          colors = plt.cm.get_cmap('viridis', len(data) - 1) # Exclude 'Total'

          for item in data:
            if item['language'] != 'Total':
              languages.append(item['language'])
              loc.append(item['linesOfCode'])

          plt.figure(figsize=(10, 8))
          plt.pie(loc, labels=languages, autopct='%1.1f%%', startangle=140, colors=colors.colors)
          plt.title('Lines of Code per Language')
          plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
          plt.savefig('loc_graph.svg')

      - name: Generate LOC badge
        id: generate_badge
        run: |
          import json

          with open("loc_data.json", "r") as f:
            data = json.load(f)

          total_loc = next((item['linesOfCode'] for item in data if item['language'] == 'Total'), 0)

          badge_url = f"https://img.shields.io/badge/Lines_of_Code-{total_loc}-brightgreen"
          with open("loc_badge.svg", "w") as f:
            f.write(f'<img src="{badge_url}" alt="Lines of Code">')

      - name: Commit and push changes to action-svgs branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: action-svgs
          commit_message: "Update LOC graph and badge"
          file_pattern: loc_graph.svg loc_badge.svg
          push_options: "--force-with-lease"
